package nyuad.ccs.moma.vulnerability.tester.service;

import lombok.RequiredArgsConstructor;
import nyuad.ccs.moma.vulnerability.tester.model.User;
import nyuad.ccs.moma.vulnerability.tester.model.UserPojo;
import nyuad.ccs.moma.vulnerability.tester.repo.UserRepository;
import nyuad.ccs.moma.vulnerability.tester.repo.UserRepositoryCustom;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@RequiredArgsConstructor
public class UserService {

    private final UserRepository userRepository;
    private final UserRepositoryCustom userRepositoryCustom;

    public User saveUser(UserPojo userPojo) {
        User user = new User(userPojo.getUsername(), userPojo.getBalance());
        return userRepository.save(user);
    }

    public User updateUser(UserPojo userPojo) {
        User user = userRepository.findById(userPojo.getId()).orElse(new User());
        user.setBalance(userPojo.getBalance());
        return userRepository.save(user);
    }

    public User getUser(final Long id) {
        return userRepository.findById(id).orElse(null);
    }

    public List<User> getUsersByBalanceGreaterThan(final float balance) {
        return userRepository.findUsersByBalanceGreaterThan(balance);
    }

    public void updateUserBalance(Float balance) {
        userRepositoryCustom.updateUserBalance(balance);
    }

}
